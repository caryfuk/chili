/*
  chilli-seed | mixins - general
  ============================== */

component(type, element = false)
  if element
    {type}, [role={type}]
      {block}
  else
    [role={type}]
      {block}

variant(types)
  for type in types
    &[data-variant~={type}]
    &.{type}
      {block}

state(types, root = false)
  for state in types
    if root is false
      &[data-state~={state}]
      &.{state}
        {block}
    else
      /[data-state~={state}]&
      /.{state}&
        {block}

ng-transition(cls, state = enter, props = all, dur = $transitionDuration, ease = $transitionEasing)
  .{cls}-enter
  .{cls}-leave
    transition props dur ease
  if state is enter
    .{cls}-enter
    .{cls}-leave.{cls}-leave-active
      {block}
  if state is leave
    .{cls}-leave
    .{cls}-enter.{cls}-enter-active
      {block}

rem(px)
  unit(px/(.16*$fontScale), 'rem')

clearfix()
  &:after
  &:before
    content ''
    display table
  &:after
    clear both

hide-text()
  text-indent 100%
  white-space nowrap
  overflow hidden

truncate-text(width = 100%)
  max-width width
  white-space nowrap
  overflow hidden
  text-overflow ellipsis

pseudo(display = block)
  content ''
  display display

scrollable(x = auto, y = auto)
  overflow-x x
  overflow-y y
  -webkit-overflow-scrolling touch

background-retina(file, width, height)
  background-image url(file)
  background-size width height
  @media $retina2x
    background-image url(pathjoin(dirname(file), basename(file, extname(file)) + '@2x' + extname(file)))
  @media $retina3x
    background-image url(pathjoin(dirname(file), basename(file, extname(file)) + '@3x' + extname(file)))

abs-center(style = transform)
  position absolute
  left 50%
  top 50%
  if style is margin
    margin (@height/-2) 0 0 (@width/-2)
  if style is transform
    transform translate(-50%, -50%)

distribute(x = left, y = center)
  if y is center
    y = middle
  font-size 0
  text-align x
  &:before
  &:after
  & > *
    font-size $fontM
  &:before
    content ''
    display inline-block
    vertical-align y
    width 0
    height 100%
    min-height inherit
    max-height inherit
    padding 0
  & > *
    display inline-block
    vertical-align y

distribute-flex(x = left, y = center, dir = row)
  if x is left
    x = flex-start
  if x is right
    x = flex-end
  if y is top
    y = flex-start
  if y is bottom
    y = flex-end
  display flex
  align-items x
  justify-content y
  flex-direction dir

unstyled-list()
  list-style none
  margin 0
  padding 0

unstyled-button()
  display inline-block
  padding 0
  appearance none
  background-color transparent
  border none
  outline none

hide(method = display)
  if method is display
    display none
  else if method is flow
    opacity 0
    position absolute
    pointer-events none

show(method = display)
  if method is display
    display block
  else if method is flow
    opacity 1
    position static
    pointer-events all

circle()
  border-radius 100%

triangle(orientation = down, bg = $colorBlack, size = 5px)
  pseudo(block)
  width 0
  height 0
  if orientation is up
    border-left size solid transparent
    border-right @border-left
    border-bottom size solid bg
  else if orientation is right
    border-top size solid transparent
    border-bottom @border-top
    border-left size solid bg
  else if orientation is down
    border-left size solid transparent
    border-right @border-left
    border-top size solid bg
  else if orientation is left
    border-top size solid transparent
    border-bottom @border-top
    border-right size solid bg

chevron(pos = top, bg = $colorWhite, border = $border, size = 12px)
  pseudo(block)
  position absolute
  width size
  height @width
  background-color bg
  border-top border
  border-left @border-top
  box-shadow $boxShadow
  clip-path polygon(0 0, 100% 0, 0 100%)
  if pos is top
    transform rotate(45deg)
    left 50%
    top (size/-2)
  else if pos is right
    transform rotate(135deg)
    right (size/-2)
    top 50%
    margin-top @right
  else if pos is bottom
    transform rotate(225deg)
    left 50%
    bottom (size/-2)
  else if pos is left
    transform rotate(-45deg)
    left (size/-2)
    top 50%
    margin-top @left

indent-children(dist = $indent)
  & > *:not(:last-child)
    margin-right dist
