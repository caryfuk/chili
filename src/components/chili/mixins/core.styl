/*
  chili | core
  ============================== */

use('../js/str-index.js')
use('../js/str-replace.js')

/*

renderQuery(queries, type)
  queries = split(' ', '' + queries)
  for query in queries
    if str-index('.', query) is 0 {
      // it's a class
      queries[index] = '.' + $prefixes[type] + str-replace('.', '', query)
    } else if str-index('#', query) is 0 {
      // it's an id
      queries[index] = '#' + $prefixes[type] + str-replace('#', '', query)
    } else if (str-index(':', query) is 0) || match('^[a-zA-Z]+$', query) {
      // it's a pseudoclass, an attribute, an element or anything else, do not prefix
      break
    }
  return join(',', queries

*/

$componentStack = {}

component(name = null, queries = null)
  if name and queries
    $componentStack[''+name] = '' + queries
  {queries}
    {block}

state(queries, target = null) 
  if target is null
    &{queries}
      {block}
  else
    targets = split(',', $componentStack[target])
    queries = split(',', queries)
    for el in targets  // TODO: render a single query, problem with '&' context
      for state in queries
        /{el}{state} &
          {block}
