/*
  chilli-seed | mixins
  ============================== */

rem(px)
  unit(px/(0.16*$fontScale), 'rem')

clearfix()
  &:after
  &:before
    content ''
    display table
  &:after
    clear both

hide-text()
  text-indent 100%
  white-space nowrap
  overflow hidden

truncate-text(width = 100%)
  max-width width
  white-space nowrap
  overflow hidden
  text-overflow ellipsis

pseudo(display)
  content ''
  display display or block

background-retina(file, width, height)
  background-image url(file)
  background-size width height
  @media $retina2x
    background-image url(pathjoin(dirname(file), basename(file, extname(file)) + '@2x' + extname(file)))
  @media $retina3x
    background-image url(pathjoin(dirname(file), basename(file, extname(file)) + '@3x' + extname(file)))

abs-center(style = transform)
  position absolute
  left 50%
  top 50%
  if style is margin
    margin (@height/-2) 0 0 (@width/-2)
  if style is transform
    transform translate(-50%, -50%)

distribute(x = left, y = center)
  if y is center
    y = middle
  font-size 0
  text-align x
  &:before
  &:after
  & > *
    font-size $fontM
  &:before
    content ''
    display inline-block
    vertical-align y
    width 0
    height 100%
    min-height inherit
    max-height inherit
    padding 0
  & > *
    display inline-block
    vertical-align y

distribute-flex(x = left, y = center)
  if x is left
    x = flex-start
  if x is right
    x = flex-end
  if y is top
    y = flex-start
  if y is bottom
    y = flex-end
  display flex
  justify-content x
  align-items y

unstyled-list()
  list-style none
  margin 0
  padding 0

hide(method = display)
  if method is display
    display none
  else if method is flow
    opacity 0
    position absolute
    pointer-events none
  else if method is fade
    opacity 0
    pointer-events none
    transition opacity $transitionDuration $transitionEasing

show(method = display)
  if method is display
    display block
  else if method is flow
    opacity 1
    position static
    pointer-events all
  else if method is fade
    opacity 1
    pointer-events all
    transition opacity $transitionDuration $animationEasing

chevron(pos = top, bg = $colorWhite, border = $border, size = 12px)
  &:before
    pseudo(block)
    position absolute
    width size
    height @width
    background-color bg
    border-top border
    border-left @border-top
    box-shadow $boxShadow
    clip-path polygon(0 0, 102% 0, 0 102%)
    if pos is top
      transform rotate(45deg)
      left 50%
      top (size/-2)
    else if pos is right
      transform rotate(135deg)
      right (size/-2)
      top 50%
      margin-top @right
    else if pos is bottom
      transform rotate(225deg)
      left 50%
      bottom (size/-2)
    else if pos is left
      transform rotate(-45deg)
      left (size/-2)
      top 50%
      margin-top @left
